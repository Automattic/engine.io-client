{"version":3,"file":"engine.io.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/contrib/parseqs.js","../build/esm/createuri.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/negotiate.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { encode } from \"./contrib/parseqs.js\";\nexport function createUri(opts, schema, query = {}) {\n    return (schema +\n        \"://\" +\n        _hostname(opts) +\n        _port(opts) +\n        opts.path +\n        _query(opts, query));\n}\nfunction _hostname(opts) {\n    const hostname = opts.hostname;\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n}\nfunction _port(opts) {\n    if (opts.port &&\n        ((opts.secure && Number(opts.port !== 443)) ||\n            (!opts.secure && Number(opts.port) !== 80))) {\n        return \":\" + opts.port;\n    }\n    else {\n        return \"\";\n    }\n}\nfunction _query(opts, query) {\n    const encodedQuery = encode(query);\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { createUri } from \"./createuri.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return createUri(this.opts, schema, query);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            if (this.opts.accessToken) {\n                xhr.setRequestHeader('Authorization', 'Bearer ' + this.opts.accessToken);\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        // add auth if token is available\n        if (this.opts.accessToken) {\n            query[\"access_token\"] = this.opts.accessToken;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { createUri } from \"./createuri.js\";\nclass NegotiateError extends Error {\n    constructor(reason, context) {\n        super(reason);\n        this.context = context;\n        this.type = \"NegotiateError\";\n    }\n}\nexport async function negotiate(opts, query) {\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    const uri = createUri(Object.assign({}, this.opts, {\n        path: this.opts.negotiatePath,\n    }), schema, this.query);\n    let negotiateResult = await fetch(uri);\n    if (negotiateResult.status < 200 || negotiateResult.status >= 400) {\n        throw new NegotiateError(\"Unexpected status code \" + negotiateResult.status, negotiateResult);\n    }\n    return await negotiateResult.json();\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nimport { negotiate } from \"./negotiate.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        this.path = this.opts.path;\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.negotiateAndOpen();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n            path: this.path,\n            token: this.token,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Negotiate and decide the url and then open transport.\n     */\n    async negotiateAndOpen() {\n        if (this.opts.negotiatePath) {\n            const negotiateResult = await negotiate(this.opts, this.opts.query);\n            // if url is set, we parse it and replace the original properties for transport\n            // if not, there's not redirection.\n            if (negotiateResult.url) {\n                const url = parse(negotiateResult.url);\n                this.hostname = url.host;\n                this.secure = url.protocol === \"https\" || url.protocol === \"wss\";\n                this.port = url.port;\n                this.path = url.path;\n            }\n            this.token = negotiateResult.token;\n        }\n        this.open();\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","createUri","schema","query","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","socket","value","onError","_get","_getPrototypeOf","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","seed","prev","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","_Transport","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","get","poll","total","doPoll","_this3","_this4","_this5","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","_extends","Request","_this6","req","method","xhrStatus","_this7","pollXhr","_this8","_this9","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","accessToken","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","NegotiateError","negotiate","_x","_x2","_negotiate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","negotiateResult","wrap","_callee$","_context","next","negotiatePath","fetch","sent","json","abrupt","stop","Socket","writeBuffer","_typeof","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","negotiateAndOpen","createTransport","EIO","token","_negotiateAndOpen","url","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades"],"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"}