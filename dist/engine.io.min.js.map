{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/createuri.js","../build/esm/contrib/parseqs.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/negotiate.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { encode } from \"./contrib/parseqs.js\";\nexport function createUri(opts, schema, query = {}) {\n    return (schema +\n        \"://\" +\n        _hostname(opts) +\n        _port(opts) +\n        opts.path +\n        _query(opts, query));\n}\nfunction _hostname(opts) {\n    const hostname = opts.hostname;\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n}\nfunction _port(opts) {\n    if (opts.port &&\n        ((opts.secure && Number(opts.port !== 443)) ||\n            (!opts.secure && Number(opts.port) !== 80))) {\n        return \":\" + opts.port;\n    }\n    else {\n        return \"\";\n    }\n}\nfunction _query(opts, query) {\n    const encodedQuery = encode(query);\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { createUri } from \"./createuri.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return createUri(this.opts, schema, query);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            if (this.opts.accessToken) {\n                xhr.setRequestHeader('Authorization', 'Bearer ' + this.opts.accessToken);\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        // add auth if token is available\n        if (this.opts.accessToken) {\n            query[\"access_token\"] = this.opts.accessToken;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { createUri } from \"./createuri.js\";\nclass NegotiateError extends Error {\n    constructor(reason, context) {\n        super(reason);\n        this.context = context;\n        this.type = \"NegotiateError\";\n    }\n}\nexport async function negotiate(opts, query) {\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    const uri = createUri(Object.assign({}, this.opts, {\n        path: this.opts.negotiatePath,\n    }), schema, this.query);\n    let negotiateResult = await fetch(uri);\n    if (negotiateResult.status < 200 || negotiateResult.status >= 400) {\n        throw new NegotiateError(\"Unexpected status code \" + negotiateResult.status, negotiateResult);\n    }\n    return await negotiateResult.json();\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nimport { negotiate } from \"./negotiate.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        this.path = this.opts.path;\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.negotiateAndOpen();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n            path: this.path,\n            token: this.token,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Negotiate and decide the url and then open transport.\n     */\n    async negotiateAndOpen() {\n        if (this.opts.negotiatePath) {\n            const negotiateResult = await negotiate(this.opts, this.opts.query);\n            // if url is set, we parse it and replace the original properties for transport\n            // if not, there's not redirection.\n            if (negotiateResult.url) {\n                const url = parse(negotiateResult.url);\n                this.hostname = url.host;\n                this.secure = url.protocol === \"https\" || url.protocol === \"wss\";\n                this.port = url.port;\n                this.path = url.path;\n            }\n            this.token = negotiateResult.token;\n        }\n        this.open();\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","createUri","schema","query","undefined","hostname","indexOf","_hostname","port","secure","Number","_port","path","encodedQuery","str","encodeURIComponent","_query","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","socket","value","_get","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","alphabet","map","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","get","poll","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","_a","_this9","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","accessToken","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","NegotiateError","negotiate","_x","_x2","_negotiate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","negotiateResult","wrap","_context","next","negotiatePath","fetch","sent","json","abrupt","stop","Socket","_negotiateAndOpen","writeBuffer","_typeof","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","negotiateAndOpen","EIO","token","url","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades"],"mappings":"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"}