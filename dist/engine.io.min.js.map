{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/contrib/parseqs.js","../build/esm/createuri.js","../build/esm/contrib/yeast.js","../build/esm/transport.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/negotiate.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    else if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    else {\r\n        return Function(\"return this\")();\r\n    }\r\n})();\r\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\r\nexport function pick(obj, ...attr) {\r\n    return attr.reduce((acc, k) => {\r\n        if (obj.hasOwnProperty(k)) {\r\n            acc[k] = obj[k];\r\n        }\r\n        return acc;\r\n    }, {});\r\n}\r\n// Keep a reference to the real timeout functions so they can be used when overridden\r\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\r\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\r\nexport function installTimerFunctions(obj, opts) {\r\n    if (opts.useNativeTimers) {\r\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\r\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\r\n    }\r\n    else {\r\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\r\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\r\n    }\r\n}\r\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\r\nconst BASE64_OVERHEAD = 1.33;\r\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\r\nexport function byteLength(obj) {\r\n    if (typeof obj === \"string\") {\r\n        return utf8Length(obj);\r\n    }\r\n    // arraybuffer or blob\r\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\r\n}\r\nfunction utf8Length(str) {\r\n    let c = 0, length = 0;\r\n    for (let i = 0, l = str.length; i < l; i++) {\r\n        c = str.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            length += 1;\r\n        }\r\n        else if (c < 0x800) {\r\n            length += 2;\r\n        }\r\n        else if (c < 0xd800 || c >= 0xe000) {\r\n            length += 3;\r\n        }\r\n        else {\r\n            i++;\r\n            length += 4;\r\n        }\r\n    }\r\n    return length;\r\n}\r\n","// imported from https://github.com/galkn/querystring\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\nexport function encode(obj) {\r\n    let str = '';\r\n    for (let i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            if (str.length)\r\n                str += '&';\r\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\nexport function decode(qs) {\r\n    let qry = {};\r\n    let pairs = qs.split('&');\r\n    for (let i = 0, l = pairs.length; i < l; i++) {\r\n        let pair = pairs[i].split('=');\r\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n    return qry;\r\n}\r\n","import { encode } from \"./contrib/parseqs.js\";\r\nexport function createUri(opts, schema, query = {}) {\r\n    return (schema +\r\n        \"://\" +\r\n        _hostname(opts) +\r\n        _port(opts) +\r\n        opts.path +\r\n        _query(opts, query));\r\n}\r\nfunction _hostname(opts) {\r\n    const hostname = opts.hostname;\r\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\r\n}\r\nfunction _port(opts) {\r\n    if (opts.port &&\r\n        ((opts.secure && Number(opts.port !== 443)) ||\r\n            (!opts.secure && Number(opts.port) !== 80))) {\r\n        return \":\" + opts.port;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nfunction _query(opts, query) {\r\n    const encodedQuery = encode(query);\r\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\r\n}\r\n","// imported from https://github.com/unshiftio/yeast\r\n'use strict';\r\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\r\nlet seed = 0, i = 0, prev;\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nexport function encode(num) {\r\n    let encoded = '';\r\n    do {\r\n        encoded = alphabet[num % length] + encoded;\r\n        num = Math.floor(num / length);\r\n    } while (num > 0);\r\n    return encoded;\r\n}\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nexport function decode(str) {\r\n    let decoded = 0;\r\n    for (i = 0; i < str.length; i++) {\r\n        decoded = decoded * length + map[str.charAt(i)];\r\n    }\r\n    return decoded;\r\n}\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nexport function yeast() {\r\n    const now = encode(+new Date());\r\n    if (now !== prev)\r\n        return seed = 0, prev = now;\r\n    return now + '.' + encode(seed++);\r\n}\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++)\r\n    map[alphabet[i]] = i;\r\n","import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nimport { createUri } from \"./createuri.js\";\r\nclass TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     */\r\n    open() {\r\n        this.readyState = \"opening\";\r\n        this.doOpen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     */\r\n    close() {\r\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     */\r\n    send(packets) {\r\n        if (this.readyState === \"open\") {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n    /**\r\n     * Pauses the transport, in order not to lose packets during an upgrade.\r\n     *\r\n     * @param onPause\r\n     */\r\n    pause(onPause) { }\r\n    createUri(schema, query = {}) {\r\n        return createUri(this.opts, schema, query);\r\n    }\r\n}\r\n","// imported from https://github.com/component/has-cors\r\nlet value = false;\r\ntry {\r\n    value = typeof XMLHttpRequest !== 'undefined' &&\r\n        'withCredentials' in new XMLHttpRequest();\r\n}\r\ncatch (err) {\r\n    // if XMLHttp support is disabled in IE then it will throw\r\n    // when trying to create\r\n}\r\nexport const hasCORS = value;\r\n","// browser shim for xmlhttprequest module\r\nimport { hasCORS } from \"../contrib/has-cors.js\";\r\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\r\nexport function XHR(opts) {\r\n    const xdomain = opts.xdomain;\r\n    // XMLHttpRequest can be disabled on IE\r\n    try {\r\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n            return new XMLHttpRequest();\r\n        }\r\n    }\r\n    catch (e) { }\r\n    if (!xdomain) {\r\n        try {\r\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\r\n        }\r\n        catch (e) { }\r\n    }\r\n}\r\nexport function createCookieJar() { }\r\n","import { Transport } from \"../transport.js\";\r\nimport { yeast } from \"../contrib/yeast.js\";\r\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\r\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions, pick } from \"../util.js\";\r\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\r\nfunction empty() { }\r\nconst hasXHR2 = (function () {\r\n    const xhr = new XMLHttpRequest({\r\n        xdomain: false,\r\n    });\r\n    return null != xhr.responseType;\r\n})();\r\nexport class Polling extends Transport {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @package\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.polling = false;\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n        }\r\n        /**\r\n         * XHR supports binary\r\n         */\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n        if (this.opts.withCredentials) {\r\n            this.cookieJar = createCookieJar();\r\n        }\r\n    }\r\n    get name() {\r\n        return \"polling\";\r\n    }\r\n    /**\r\n     * Opens the socket (triggers polling). We write a PING message to determine\r\n     * when the transport is open.\r\n     *\r\n     * @protected\r\n     */\r\n    doOpen() {\r\n        this.poll();\r\n    }\r\n    /**\r\n     * Pauses polling.\r\n     *\r\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\r\n     * @package\r\n     */\r\n    pause(onPause) {\r\n        this.readyState = \"pausing\";\r\n        const pause = () => {\r\n            this.readyState = \"paused\";\r\n            onPause();\r\n        };\r\n        if (this.polling || !this.writable) {\r\n            let total = 0;\r\n            if (this.polling) {\r\n                total++;\r\n                this.once(\"pollComplete\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n            if (!this.writable) {\r\n                total++;\r\n                this.once(\"drain\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts polling cycle.\r\n     *\r\n     * @private\r\n     */\r\n    poll() {\r\n        this.polling = true;\r\n        this.doPoll();\r\n        this.emitReserved(\"poll\");\r\n    }\r\n    /**\r\n     * Overloads onData to detect payloads.\r\n     *\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const callback = (packet) => {\r\n            // if its the first message we consider the transport open\r\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\r\n                this.onOpen();\r\n            }\r\n            // if its a close packet, we close the ongoing requests\r\n            if (\"close\" === packet.type) {\r\n                this.onClose({ description: \"transport closed by the server\" });\r\n                return false;\r\n            }\r\n            // otherwise bypass onData and handle the message\r\n            this.onPacket(packet);\r\n        };\r\n        // decode payload\r\n        decodePayload(data, this.socket.binaryType).forEach(callback);\r\n        // if an event did not trigger closing\r\n        if (\"closed\" !== this.readyState) {\r\n            // if we got data we're not polling\r\n            this.polling = false;\r\n            this.emitReserved(\"pollComplete\");\r\n            if (\"open\" === this.readyState) {\r\n                this.poll();\r\n            }\r\n            else {\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * For polling, send a close packet.\r\n     *\r\n     * @protected\r\n     */\r\n    doClose() {\r\n        const close = () => {\r\n            this.write([{ type: \"close\" }]);\r\n        };\r\n        if (\"open\" === this.readyState) {\r\n            close();\r\n        }\r\n        else {\r\n            // in case we're trying to close while\r\n            // handshaking is in progress (GH-164)\r\n            this.once(\"open\", close);\r\n        }\r\n    }\r\n    /**\r\n     * Writes a packets payload.\r\n     *\r\n     * @param {Array} packets - data packets\r\n     * @protected\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        encodePayload(packets, (data) => {\r\n            this.doWrite(data, () => {\r\n                this.writable = true;\r\n                this.emitReserved(\"drain\");\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        // cache busting is forced\r\n        if (false !== this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = yeast();\r\n        }\r\n        if (!this.supportsBinary && !query.sid) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Creates a request.\r\n     *\r\n     * @param {String} method\r\n     * @private\r\n     */\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\r\n        return new Request(this.uri(), opts);\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr post error\", xhrStatus, context);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @private\r\n     */\r\n    doPoll() {\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr poll error\", xhrStatus, context);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nexport class Request extends Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @package\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.method = opts.method || \"GET\";\r\n        this.uri = uri;\r\n        this.data = undefined !== opts.data ? opts.data : null;\r\n        this.create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @private\r\n     */\r\n    create() {\r\n        var _a;\r\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this.opts.xd;\r\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\r\n        try {\r\n            xhr.open(this.method, this.uri, true);\r\n            try {\r\n                if (this.opts.extraHeaders) {\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this.opts.extraHeaders) {\r\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this.method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this.opts.withCredentials;\r\n            }\r\n            if (this.opts.requestTimeout) {\r\n                xhr.timeout = this.opts.requestTimeout;\r\n            }\r\n            if (this.opts.accessToken) {\r\n                xhr.setRequestHeader('Authorization', 'Bearer ' + this.opts.accessToken);\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                var _a;\r\n                if (xhr.readyState === 3) {\r\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\r\n                }\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this.onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            xhr.send(this.data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this.onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this.index = Request.requestsCount++;\r\n            Request.requests[this.index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        this.emitReserved(\"error\", err, this.xhr);\r\n        this.cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup(fromError) {\r\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n            return;\r\n        }\r\n        this.xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this.xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this.index];\r\n        }\r\n        this.xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @private\r\n     */\r\n    onLoad() {\r\n        const data = this.xhr.responseText;\r\n        if (data !== null) {\r\n            this.emitReserved(\"data\", data);\r\n            this.emitReserved(\"success\");\r\n            this.cleanup();\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @package\r\n     */\r\n    abort() {\r\n        this.cleanup();\r\n    }\r\n}\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\r\nexport const nextTick = (() => {\r\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\r\n    if (isPromiseAvailable) {\r\n        return (cb) => Promise.resolve().then(cb);\r\n    }\r\n    else {\r\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\r\n    }\r\n})();\r\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\r\nexport const usingBrowserWebSocket = true;\r\nexport const defaultBinaryType = \"arraybuffer\";\r\n","import { Transport } from \"../transport.js\";\r\nimport { yeast } from \"../contrib/yeast.js\";\r\nimport { pick } from \"../util.js\";\r\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\r\nimport { encodePacket } from \"engine.io-parser\";\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nexport class WS extends Transport {\r\n    /**\r\n     * WebSocket transport constructor.\r\n     *\r\n     * @param {Object} opts - connection options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    doOpen() {\r\n        if (!this.check()) {\r\n            // let probe timeout\r\n            return;\r\n        }\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws =\r\n                usingBrowserWebSocket && !isReactNative\r\n                    ? protocols\r\n                        ? new WebSocket(uri, protocols)\r\n                        : new WebSocket(uri)\r\n                    : new WebSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = (closeEvent) => this.onClose({\r\n            description: \"websocket connection closed\",\r\n            context: closeEvent,\r\n        });\r\n        this.ws.onmessage = (ev) => this.onData(ev.data);\r\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            encodePacket(packet, this.supportsBinary, (data) => {\r\n                // always create a new object (GH-437)\r\n                const opts = {};\r\n                if (!usingBrowserWebSocket) {\r\n                    if (packet.options) {\r\n                        opts.compress = packet.options.compress;\r\n                    }\r\n                    if (this.opts.perMessageDeflate) {\r\n                        const len = \r\n                        // @ts-ignore\r\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\r\n                        if (len < this.opts.perMessageDeflate.threshold) {\r\n                            opts.compress = false;\r\n                        }\r\n                    }\r\n                }\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    if (usingBrowserWebSocket) {\r\n                        // TypeError is thrown when passing the second argument on Safari\r\n                        this.ws.send(data);\r\n                    }\r\n                    else {\r\n                        this.ws.send(data, opts);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        const query = this.query || {};\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = yeast();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        // add auth if token is available\r\n        if (this.opts.accessToken) {\r\n            query[\"access_token\"] = this.opts.accessToken;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Feature detection for WebSocket.\r\n     *\r\n     * @return {Boolean} whether this transport is available.\r\n     * @private\r\n     */\r\n    check() {\r\n        return !!WebSocket;\r\n    }\r\n}\r\n","import { Transport } from \"../transport.js\";\r\nimport { nextTick } from \"./websocket-constructor.js\";\r\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\r\nexport class WT extends Transport {\r\n    get name() {\r\n        return \"webtransport\";\r\n    }\r\n    doOpen() {\r\n        // @ts-ignore\r\n        if (typeof WebTransport !== \"function\") {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\r\n        this.transport.closed\r\n            .then(() => {\r\n            this.onClose();\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"webtransport error\", err);\r\n        });\r\n        // note: we could have used async/await, but that would require some additional polyfills\r\n        this.transport.ready.then(() => {\r\n            this.transport.createBidirectionalStream().then((stream) => {\r\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\r\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\r\n                const encoderStream = createPacketEncoderStream();\r\n                encoderStream.readable.pipeTo(stream.writable);\r\n                this.writer = encoderStream.writable.getWriter();\r\n                const read = () => {\r\n                    reader\r\n                        .read()\r\n                        .then(({ done, value }) => {\r\n                        if (done) {\r\n                            return;\r\n                        }\r\n                        this.onPacket(value);\r\n                        read();\r\n                    })\r\n                        .catch((err) => {\r\n                    });\r\n                };\r\n                read();\r\n                const packet = { type: \"open\" };\r\n                if (this.query.sid) {\r\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\r\n                }\r\n                this.writer.write(packet).then(() => this.onOpen());\r\n            });\r\n        });\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            this.writer.write(packet).then(() => {\r\n                if (lastPacket) {\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        var _a;\r\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\r\n    }\r\n}\r\n","import { Polling } from \"./polling.js\";\r\nimport { WS } from \"./websocket.js\";\r\nimport { WT } from \"./webtransport.js\";\r\nexport const transports = {\r\n    websocket: WS,\r\n    webtransport: WT,\r\n    polling: Polling,\r\n};\r\n","// imported from https://github.com/galkn/parseuri\r\n/**\r\n * Parses a URI\r\n *\r\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\r\n *\r\n * See:\r\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n * - https://caniuse.com/url\r\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\r\n *\r\n * History of the parse() method:\r\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\r\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\r\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\nconst parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\nexport function parse(str) {\r\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n    let m = re.exec(str || ''), uri = {}, i = 14;\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n    uri.pathNames = pathNames(uri, uri['path']);\r\n    uri.queryKey = queryKey(uri, uri['query']);\r\n    return uri;\r\n}\r\nfunction pathNames(obj, path) {\r\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\r\n    if (path.slice(0, 1) == '/' || path.length === 0) {\r\n        names.splice(0, 1);\r\n    }\r\n    if (path.slice(-1) == '/') {\r\n        names.splice(names.length - 1, 1);\r\n    }\r\n    return names;\r\n}\r\nfunction queryKey(uri, query) {\r\n    const data = {};\r\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\r\n        if ($1) {\r\n            data[$1] = $2;\r\n        }\r\n    });\r\n    return data;\r\n}\r\n","import { createUri } from \"./createuri.js\";\r\nclass NegotiateError extends Error {\r\n    constructor(reason, context) {\r\n        super(reason);\r\n        this.context = context;\r\n        this.type = \"NegotiateError\";\r\n    }\r\n}\r\nexport class Negotiate {\r\n    /**\r\n     * Negotiate constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n    }\r\n    /**\r\n     * Start the negotiation\r\n     */\r\n    async start() {\r\n        const uri = this.uri();\r\n        let negotiateResult = await fetch(uri);\r\n        if (negotiateResult.status < 200 || negotiateResult.status >= 400) {\r\n            throw new NegotiateError(\"Unexpected status code \" + negotiateResult.status, negotiateResult);\r\n        }\r\n        return await negotiateResult.json();\r\n    }\r\n    /**\r\n     * Generates uri for negotiate.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        let opts = Object.assign({}, this.opts, {\r\n            path: this.opts.negotiatePath,\r\n        });\r\n        return createUri(opts, schema, query);\r\n    }\r\n}\r\n","import { transports } from \"./transports/index.js\";\r\nimport { installTimerFunctions, byteLength } from \"./util.js\";\r\nimport { decode } from \"./contrib/parseqs.js\";\r\nimport { parse } from \"./contrib/parseuri.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { protocol } from \"engine.io-parser\";\r\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\r\nimport { Negotiate } from \"./negotiate.js\";\r\nexport class Socket extends Emitter {\r\n    /**\r\n     * Socket constructor.\r\n     *\r\n     * @param {String|Object} uri - uri or options\r\n     * @param {Object} opts - options\r\n     */\r\n    constructor(uri, opts = {}) {\r\n        super();\r\n        this.binaryType = defaultBinaryType;\r\n        this.writeBuffer = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = null;\r\n        }\r\n        if (uri) {\r\n            uri = parse(uri);\r\n            opts.hostname = uri.host;\r\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\r\n            opts.port = uri.port;\r\n            if (uri.query)\r\n                opts.query = uri.query;\r\n        }\r\n        else if (opts.host) {\r\n            opts.hostname = parse(opts.host).host;\r\n        }\r\n        installTimerFunctions(this, opts);\r\n        this.secure =\r\n            null != opts.secure\r\n                ? opts.secure\r\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\r\n        if (opts.hostname && !opts.port) {\r\n            // if no port is specified manually, use the protocol default\r\n            opts.port = this.secure ? \"443\" : \"80\";\r\n        }\r\n        this.hostname =\r\n            opts.hostname ||\r\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\r\n        this.port =\r\n            opts.port ||\r\n                (typeof location !== \"undefined\" && location.port\r\n                    ? location.port\r\n                    : this.secure\r\n                        ? \"443\"\r\n                        : \"80\");\r\n        this.transports = opts.transports || [\r\n            \"polling\",\r\n            \"websocket\",\r\n            \"webtransport\",\r\n        ];\r\n        this.writeBuffer = [];\r\n        this.prevBufferLen = 0;\r\n        this.opts = Object.assign({\r\n            path: \"/engine.io\",\r\n            agent: false,\r\n            withCredentials: false,\r\n            upgrade: true,\r\n            timestampParam: \"t\",\r\n            rememberUpgrade: false,\r\n            addTrailingSlash: true,\r\n            rejectUnauthorized: true,\r\n            perMessageDeflate: {\r\n                threshold: 1024,\r\n            },\r\n            transportOptions: {},\r\n            closeOnBeforeunload: false,\r\n        }, opts);\r\n        this.opts.path =\r\n            this.opts.path.replace(/\\/$/, \"\") +\r\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\r\n        this.path = this.opts.path;\r\n        if (typeof this.opts.query === \"string\") {\r\n            this.opts.query = decode(this.opts.query);\r\n        }\r\n        // set on handshake\r\n        this.id = null;\r\n        this.upgrades = null;\r\n        this.pingInterval = null;\r\n        this.pingTimeout = null;\r\n        // set on heartbeat\r\n        this.pingTimeoutTimer = null;\r\n        if (typeof addEventListener === \"function\") {\r\n            if (this.opts.closeOnBeforeunload) {\r\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\r\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\r\n                // closed/reloaded)\r\n                this.beforeunloadEventListener = () => {\r\n                    if (this.transport) {\r\n                        // silently close the transport\r\n                        this.transport.removeAllListeners();\r\n                        this.transport.close();\r\n                    }\r\n                };\r\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n            }\r\n            if (this.hostname !== \"localhost\") {\r\n                this.offlineEventListener = () => {\r\n                    this.onClose(\"transport close\", {\r\n                        description: \"network connection lost\",\r\n                    });\r\n                };\r\n                addEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n        }\r\n        this.negotiateAndOpen();\r\n    }\r\n    /**\r\n     * Creates transport of the given type.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @return {Transport}\r\n     * @private\r\n     */\r\n    createTransport(name) {\r\n        const query = Object.assign({}, this.opts.query);\r\n        // append engine.io protocol identifier\r\n        query.EIO = protocol;\r\n        // transport name\r\n        query.transport = name;\r\n        // session id if we already have one\r\n        if (this.id)\r\n            query.sid = this.id;\r\n        const opts = Object.assign({}, this.opts, {\r\n            query,\r\n            socket: this,\r\n            hostname: this.hostname,\r\n            secure: this.secure,\r\n            port: this.port,\r\n            path: this.path,\r\n            token: this.token,\r\n        }, this.opts.transportOptions[name]);\r\n        return new transports[name](opts);\r\n    }\r\n    /**\r\n     * Negotiate and decide the url and then open transport.\r\n     */\r\n    async negotiateAndOpen() {\r\n        if (this.opts.negotiatePath) {\r\n            const negotiate = new Negotiate(this.opts);\r\n            const negotiateResult = await negotiate.start();\r\n            // if url is set, we parse it and replace the original properties for transport\r\n            // if not, there's not redirection.\r\n            if (negotiateResult.url) {\r\n                const url = parse(negotiateResult.url);\r\n                this.hostname = url.host;\r\n                this.secure = url.protocol === \"https\" || url.protocol === \"wss\";\r\n                this.port = url.port;\r\n                this.path = url.path;\r\n            }\r\n            this.token = negotiateResult.token;\r\n        }\r\n        this.open();\r\n    }\r\n    /**\r\n     * Initializes transport to use and starts probe.\r\n     *\r\n     * @private\r\n     */\r\n    open() {\r\n        let transport;\r\n        if (this.opts.rememberUpgrade &&\r\n            Socket.priorWebsocketSuccess &&\r\n            this.transports.indexOf(\"websocket\") !== -1) {\r\n            transport = \"websocket\";\r\n        }\r\n        else if (0 === this.transports.length) {\r\n            // Emit error on next tick so it can be listened to\r\n            this.setTimeoutFn(() => {\r\n                this.emitReserved(\"error\", \"No transports available\");\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n            transport = this.transports[0];\r\n        }\r\n        this.readyState = \"opening\";\r\n        // Retry with the next transport if the transport is disabled (jsonp: false)\r\n        try {\r\n            transport = this.createTransport(transport);\r\n        }\r\n        catch (e) {\r\n            this.transports.shift();\r\n            this.open();\r\n            return;\r\n        }\r\n        transport.open();\r\n        this.setTransport(transport);\r\n    }\r\n    /**\r\n     * Sets the current transport. Disables the existing one (if any).\r\n     *\r\n     * @private\r\n     */\r\n    setTransport(transport) {\r\n        if (this.transport) {\r\n            this.transport.removeAllListeners();\r\n        }\r\n        // set up transport\r\n        this.transport = transport;\r\n        // set up transport listeners\r\n        transport\r\n            .on(\"drain\", this.onDrain.bind(this))\r\n            .on(\"packet\", this.onPacket.bind(this))\r\n            .on(\"error\", this.onError.bind(this))\r\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\r\n    }\r\n    /**\r\n     * Probes a transport.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @private\r\n     */\r\n    probe(name) {\r\n        let transport = this.createTransport(name);\r\n        let failed = false;\r\n        Socket.priorWebsocketSuccess = false;\r\n        const onTransportOpen = () => {\r\n            if (failed)\r\n                return;\r\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\r\n            transport.once(\"packet\", (msg) => {\r\n                if (failed)\r\n                    return;\r\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\r\n                    this.upgrading = true;\r\n                    this.emitReserved(\"upgrading\", transport);\r\n                    if (!transport)\r\n                        return;\r\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\r\n                    this.transport.pause(() => {\r\n                        if (failed)\r\n                            return;\r\n                        if (\"closed\" === this.readyState)\r\n                            return;\r\n                        cleanup();\r\n                        this.setTransport(transport);\r\n                        transport.send([{ type: \"upgrade\" }]);\r\n                        this.emitReserved(\"upgrade\", transport);\r\n                        transport = null;\r\n                        this.upgrading = false;\r\n                        this.flush();\r\n                    });\r\n                }\r\n                else {\r\n                    const err = new Error(\"probe error\");\r\n                    // @ts-ignore\r\n                    err.transport = transport.name;\r\n                    this.emitReserved(\"upgradeError\", err);\r\n                }\r\n            });\r\n        };\r\n        function freezeTransport() {\r\n            if (failed)\r\n                return;\r\n            // Any callback called by transport should be ignored since now\r\n            failed = true;\r\n            cleanup();\r\n            transport.close();\r\n            transport = null;\r\n        }\r\n        // Handle any error that happens while probing\r\n        const onerror = (err) => {\r\n            const error = new Error(\"probe error: \" + err);\r\n            // @ts-ignore\r\n            error.transport = transport.name;\r\n            freezeTransport();\r\n            this.emitReserved(\"upgradeError\", error);\r\n        };\r\n        function onTransportClose() {\r\n            onerror(\"transport closed\");\r\n        }\r\n        // When the socket is closed while we're probing\r\n        function onclose() {\r\n            onerror(\"socket closed\");\r\n        }\r\n        // When the socket is upgraded while we're probing\r\n        function onupgrade(to) {\r\n            if (transport && to.name !== transport.name) {\r\n                freezeTransport();\r\n            }\r\n        }\r\n        // Remove all listeners on the transport and on self\r\n        const cleanup = () => {\r\n            transport.removeListener(\"open\", onTransportOpen);\r\n            transport.removeListener(\"error\", onerror);\r\n            transport.removeListener(\"close\", onTransportClose);\r\n            this.off(\"close\", onclose);\r\n            this.off(\"upgrading\", onupgrade);\r\n        };\r\n        transport.once(\"open\", onTransportOpen);\r\n        transport.once(\"error\", onerror);\r\n        transport.once(\"close\", onTransportClose);\r\n        this.once(\"close\", onclose);\r\n        this.once(\"upgrading\", onupgrade);\r\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\r\n            name !== \"webtransport\") {\r\n            // favor WebTransport\r\n            this.setTimeoutFn(() => {\r\n                if (!failed) {\r\n                    transport.open();\r\n                }\r\n            }, 200);\r\n        }\r\n        else {\r\n            transport.open();\r\n        }\r\n    }\r\n    /**\r\n     * Called when connection is deemed open.\r\n     *\r\n     * @private\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\r\n        this.emitReserved(\"open\");\r\n        this.flush();\r\n        // we check for `readyState` in case an `open`\r\n        // listener already closed the socket\r\n        if (\"open\" === this.readyState && this.opts.upgrade) {\r\n            let i = 0;\r\n            const l = this.upgrades.length;\r\n            for (; i < l; i++) {\r\n                this.probe(this.upgrades[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handles a packet.\r\n     *\r\n     * @private\r\n     */\r\n    onPacket(packet) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            this.emitReserved(\"packet\", packet);\r\n            // Socket is live - any packet counts\r\n            this.emitReserved(\"heartbeat\");\r\n            this.resetPingTimeout();\r\n            switch (packet.type) {\r\n                case \"open\":\r\n                    this.onHandshake(JSON.parse(packet.data));\r\n                    break;\r\n                case \"ping\":\r\n                    this.sendPacket(\"pong\");\r\n                    this.emitReserved(\"ping\");\r\n                    this.emitReserved(\"pong\");\r\n                    break;\r\n                case \"error\":\r\n                    const err = new Error(\"server error\");\r\n                    // @ts-ignore\r\n                    err.code = packet.data;\r\n                    this.onError(err);\r\n                    break;\r\n                case \"message\":\r\n                    this.emitReserved(\"data\", packet.data);\r\n                    this.emitReserved(\"message\", packet.data);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    /**\r\n     * Called upon handshake completion.\r\n     *\r\n     * @param {Object} data - handshake obj\r\n     * @private\r\n     */\r\n    onHandshake(data) {\r\n        this.emitReserved(\"handshake\", data);\r\n        this.id = data.sid;\r\n        this.transport.query.sid = data.sid;\r\n        this.upgrades = this.filterUpgrades(data.upgrades);\r\n        this.pingInterval = data.pingInterval;\r\n        this.pingTimeout = data.pingTimeout;\r\n        this.maxPayload = data.maxPayload;\r\n        this.onOpen();\r\n        // In case open handler closes socket\r\n        if (\"closed\" === this.readyState)\r\n            return;\r\n        this.resetPingTimeout();\r\n    }\r\n    /**\r\n     * Sets and resets ping timeout timer based on server pings.\r\n     *\r\n     * @private\r\n     */\r\n    resetPingTimeout() {\r\n        this.clearTimeoutFn(this.pingTimeoutTimer);\r\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\r\n            this.onClose(\"ping timeout\");\r\n        }, this.pingInterval + this.pingTimeout);\r\n        if (this.opts.autoUnref) {\r\n            this.pingTimeoutTimer.unref();\r\n        }\r\n    }\r\n    /**\r\n     * Called on `drain` event\r\n     *\r\n     * @private\r\n     */\r\n    onDrain() {\r\n        this.writeBuffer.splice(0, this.prevBufferLen);\r\n        // setting prevBufferLen = 0 is very important\r\n        // for example, when upgrading, upgrade packet is sent over,\r\n        // and a nonzero prevBufferLen could cause problems on `drain`\r\n        this.prevBufferLen = 0;\r\n        if (0 === this.writeBuffer.length) {\r\n            this.emitReserved(\"drain\");\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    }\r\n    /**\r\n     * Flush write buffers.\r\n     *\r\n     * @private\r\n     */\r\n    flush() {\r\n        if (\"closed\" !== this.readyState &&\r\n            this.transport.writable &&\r\n            !this.upgrading &&\r\n            this.writeBuffer.length) {\r\n            const packets = this.getWritablePackets();\r\n            this.transport.send(packets);\r\n            // keep track of current length of writeBuffer\r\n            // splice writeBuffer and callbackBuffer on `drain`\r\n            this.prevBufferLen = packets.length;\r\n            this.emitReserved(\"flush\");\r\n        }\r\n    }\r\n    /**\r\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\r\n     * long-polling)\r\n     *\r\n     * @private\r\n     */\r\n    getWritablePackets() {\r\n        const shouldCheckPayloadSize = this.maxPayload &&\r\n            this.transport.name === \"polling\" &&\r\n            this.writeBuffer.length > 1;\r\n        if (!shouldCheckPayloadSize) {\r\n            return this.writeBuffer;\r\n        }\r\n        let payloadSize = 1; // first packet type\r\n        for (let i = 0; i < this.writeBuffer.length; i++) {\r\n            const data = this.writeBuffer[i].data;\r\n            if (data) {\r\n                payloadSize += byteLength(data);\r\n            }\r\n            if (i > 0 && payloadSize > this.maxPayload) {\r\n                return this.writeBuffer.slice(0, i);\r\n            }\r\n            payloadSize += 2; // separator + packet type\r\n        }\r\n        return this.writeBuffer;\r\n    }\r\n    /**\r\n     * Sends a message.\r\n     *\r\n     * @param {String} msg - message.\r\n     * @param {Object} options.\r\n     * @param {Function} callback function.\r\n     * @return {Socket} for chaining.\r\n     */\r\n    write(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    send(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param {String} type: packet type.\r\n     * @param {String} data.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @private\r\n     */\r\n    sendPacket(type, data, options, fn) {\r\n        if (\"function\" === typeof data) {\r\n            fn = data;\r\n            data = undefined;\r\n        }\r\n        if (\"function\" === typeof options) {\r\n            fn = options;\r\n            options = null;\r\n        }\r\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\r\n            return;\r\n        }\r\n        options = options || {};\r\n        options.compress = false !== options.compress;\r\n        const packet = {\r\n            type: type,\r\n            data: data,\r\n            options: options,\r\n        };\r\n        this.emitReserved(\"packetCreate\", packet);\r\n        this.writeBuffer.push(packet);\r\n        if (fn)\r\n            this.once(\"flush\", fn);\r\n        this.flush();\r\n    }\r\n    /**\r\n     * Closes the connection.\r\n     */\r\n    close() {\r\n        const close = () => {\r\n            this.onClose(\"forced close\");\r\n            this.transport.close();\r\n        };\r\n        const cleanupAndClose = () => {\r\n            this.off(\"upgrade\", cleanupAndClose);\r\n            this.off(\"upgradeError\", cleanupAndClose);\r\n            close();\r\n        };\r\n        const waitForUpgrade = () => {\r\n            // wait for upgrade to finish since we can't send packets while pausing a transport\r\n            this.once(\"upgrade\", cleanupAndClose);\r\n            this.once(\"upgradeError\", cleanupAndClose);\r\n        };\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.readyState = \"closing\";\r\n            if (this.writeBuffer.length) {\r\n                this.once(\"drain\", () => {\r\n                    if (this.upgrading) {\r\n                        waitForUpgrade();\r\n                    }\r\n                    else {\r\n                        close();\r\n                    }\r\n                });\r\n            }\r\n            else if (this.upgrading) {\r\n                waitForUpgrade();\r\n            }\r\n            else {\r\n                close();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Called upon transport error\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        Socket.priorWebsocketSuccess = false;\r\n        this.emitReserved(\"error\", err);\r\n        this.onClose(\"transport error\", err);\r\n    }\r\n    /**\r\n     * Called upon transport close.\r\n     *\r\n     * @private\r\n     */\r\n    onClose(reason, description) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            // clear timers\r\n            this.clearTimeoutFn(this.pingTimeoutTimer);\r\n            // stop event from firing again for transport\r\n            this.transport.removeAllListeners(\"close\");\r\n            // ensure transport won't stay open\r\n            this.transport.close();\r\n            // ignore further transport communication\r\n            this.transport.removeAllListeners();\r\n            if (typeof removeEventListener === \"function\") {\r\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n                removeEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n            // set ready state\r\n            this.readyState = \"closed\";\r\n            // clear session id\r\n            this.id = null;\r\n            // emit close event\r\n            this.emitReserved(\"close\", reason, description);\r\n            // clean buffers after, so users can still\r\n            // grab the buffers on `close` event\r\n            this.writeBuffer = [];\r\n            this.prevBufferLen = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Filters upgrades, returning only those matching client transports.\r\n     *\r\n     * @param {Array} upgrades - server upgrades\r\n     * @private\r\n     */\r\n    filterUpgrades(upgrades) {\r\n        const filteredUpgrades = [];\r\n        let i = 0;\r\n        const j = upgrades.length;\r\n        for (; i < j; i++) {\r\n            if (~this.transports.indexOf(upgrades[i]))\r\n                filteredUpgrades.push(upgrades[i]);\r\n        }\r\n        return filteredUpgrades;\r\n    }\r\n}\r\nSocket.protocol = protocol;\r\n","import { Socket } from \"./socket.js\";\r\nexport default (uri, opts) => new Socket(uri, opts);\r\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","length","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","createUri","schema","query","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","prev","TransportError","reason","description","context","Error","Transport","writable","socket","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","alphabet","map","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","xd","forceBase64","_this","withCredentials","cookieJar","createCookieJar","poll","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","timestampRequests","timestampParam","sid","b64","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","undefined","_a","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","accessToken","onreadystatechange","_this9","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","NegotiateError","Negotiate","fetch","negotiateResult","json","_extends","negotiatePath","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","negotiateAndOpen","EIO","token","negotiate","start","url","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades"],"mappings":"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"}