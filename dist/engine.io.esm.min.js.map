{"version":3,"file":"engine.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/createuri.js","../build/esm/contrib/parseqs.js","../build/esm/transport.js","../build/esm/contrib/yeast.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/index.js","../build/esm/transports/webtransport.js","../build/esm/contrib/parseuri.js","../build/esm/negotiate.js","../build/esm/socket.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    else if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    else {\r\n        return Function(\"return this\")();\r\n    }\r\n})();\r\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\r\nexport function pick(obj, ...attr) {\r\n    return attr.reduce((acc, k) => {\r\n        if (obj.hasOwnProperty(k)) {\r\n            acc[k] = obj[k];\r\n        }\r\n        return acc;\r\n    }, {});\r\n}\r\n// Keep a reference to the real timeout functions so they can be used when overridden\r\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\r\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\r\nexport function installTimerFunctions(obj, opts) {\r\n    if (opts.useNativeTimers) {\r\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\r\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\r\n    }\r\n    else {\r\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\r\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\r\n    }\r\n}\r\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\r\nconst BASE64_OVERHEAD = 1.33;\r\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\r\nexport function byteLength(obj) {\r\n    if (typeof obj === \"string\") {\r\n        return utf8Length(obj);\r\n    }\r\n    // arraybuffer or blob\r\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\r\n}\r\nfunction utf8Length(str) {\r\n    let c = 0, length = 0;\r\n    for (let i = 0, l = str.length; i < l; i++) {\r\n        c = str.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            length += 1;\r\n        }\r\n        else if (c < 0x800) {\r\n            length += 2;\r\n        }\r\n        else if (c < 0xd800 || c >= 0xe000) {\r\n            length += 3;\r\n        }\r\n        else {\r\n            i++;\r\n            length += 4;\r\n        }\r\n    }\r\n    return length;\r\n}\r\n","import { encode } from \"./contrib/parseqs.js\";\r\nexport function createUri(opts, schema, query = {}) {\r\n    return (schema +\r\n        \"://\" +\r\n        _hostname(opts) +\r\n        _port(opts) +\r\n        opts.path +\r\n        _query(opts, query));\r\n}\r\nfunction _hostname(opts) {\r\n    const hostname = opts.hostname;\r\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\r\n}\r\nfunction _port(opts) {\r\n    if (opts.port &&\r\n        ((opts.secure && Number(opts.port !== 443)) ||\r\n            (!opts.secure && Number(opts.port) !== 80))) {\r\n        return \":\" + opts.port;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\nfunction _query(opts, query) {\r\n    const encodedQuery = encode(query);\r\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\r\n}\r\n","// imported from https://github.com/galkn/querystring\r\n/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\nexport function encode(obj) {\r\n    let str = '';\r\n    for (let i in obj) {\r\n        if (obj.hasOwnProperty(i)) {\r\n            if (str.length)\r\n                str += '&';\r\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\nexport function decode(qs) {\r\n    let qry = {};\r\n    let pairs = qs.split('&');\r\n    for (let i = 0, l = pairs.length; i < l; i++) {\r\n        let pair = pairs[i].split('=');\r\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n    }\r\n    return qry;\r\n}\r\n","import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nimport { createUri } from \"./createuri.js\";\r\nclass TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     */\r\n    open() {\r\n        this.readyState = \"opening\";\r\n        this.doOpen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     */\r\n    close() {\r\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     */\r\n    send(packets) {\r\n        if (this.readyState === \"open\") {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n    /**\r\n     * Pauses the transport, in order not to lose packets during an upgrade.\r\n     *\r\n     * @param onPause\r\n     */\r\n    pause(onPause) { }\r\n    createUri(schema, query = {}) {\r\n        return createUri(this.opts, schema, query);\r\n    }\r\n}\r\n","// imported from https://github.com/unshiftio/yeast\r\n'use strict';\r\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\r\nlet seed = 0, i = 0, prev;\r\n/**\r\n * Return a string representing the specified number.\r\n *\r\n * @param {Number} num The number to convert.\r\n * @returns {String} The string representation of the number.\r\n * @api public\r\n */\r\nexport function encode(num) {\r\n    let encoded = '';\r\n    do {\r\n        encoded = alphabet[num % length] + encoded;\r\n        num = Math.floor(num / length);\r\n    } while (num > 0);\r\n    return encoded;\r\n}\r\n/**\r\n * Return the integer value specified by the given string.\r\n *\r\n * @param {String} str The string to convert.\r\n * @returns {Number} The integer value represented by the string.\r\n * @api public\r\n */\r\nexport function decode(str) {\r\n    let decoded = 0;\r\n    for (i = 0; i < str.length; i++) {\r\n        decoded = decoded * length + map[str.charAt(i)];\r\n    }\r\n    return decoded;\r\n}\r\n/**\r\n * Yeast: A tiny growing id generator.\r\n *\r\n * @returns {String} A unique id.\r\n * @api public\r\n */\r\nexport function yeast() {\r\n    const now = encode(+new Date());\r\n    if (now !== prev)\r\n        return seed = 0, prev = now;\r\n    return now + '.' + encode(seed++);\r\n}\r\n//\r\n// Map each character to its index.\r\n//\r\nfor (; i < length; i++)\r\n    map[alphabet[i]] = i;\r\n","// imported from https://github.com/component/has-cors\r\nlet value = false;\r\ntry {\r\n    value = typeof XMLHttpRequest !== 'undefined' &&\r\n        'withCredentials' in new XMLHttpRequest();\r\n}\r\ncatch (err) {\r\n    // if XMLHttp support is disabled in IE then it will throw\r\n    // when trying to create\r\n}\r\nexport const hasCORS = value;\r\n","// browser shim for xmlhttprequest module\r\nimport { hasCORS } from \"../contrib/has-cors.js\";\r\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\r\nexport function XHR(opts) {\r\n    const xdomain = opts.xdomain;\r\n    // XMLHttpRequest can be disabled on IE\r\n    try {\r\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n            return new XMLHttpRequest();\r\n        }\r\n    }\r\n    catch (e) { }\r\n    if (!xdomain) {\r\n        try {\r\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\r\n        }\r\n        catch (e) { }\r\n    }\r\n}\r\nexport function createCookieJar() { }\r\n","import { Transport } from \"../transport.js\";\r\nimport { yeast } from \"../contrib/yeast.js\";\r\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\r\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions, pick } from \"../util.js\";\r\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\r\nfunction empty() { }\r\nconst hasXHR2 = (function () {\r\n    const xhr = new XMLHttpRequest({\r\n        xdomain: false,\r\n    });\r\n    return null != xhr.responseType;\r\n})();\r\nexport class Polling extends Transport {\r\n    /**\r\n     * XHR Polling constructor.\r\n     *\r\n     * @param {Object} opts\r\n     * @package\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.polling = false;\r\n        if (typeof location !== \"undefined\") {\r\n            const isSSL = \"https:\" === location.protocol;\r\n            let port = location.port;\r\n            // some user agents have empty `location.port`\r\n            if (!port) {\r\n                port = isSSL ? \"443\" : \"80\";\r\n            }\r\n            this.xd =\r\n                (typeof location !== \"undefined\" &&\r\n                    opts.hostname !== location.hostname) ||\r\n                    port !== opts.port;\r\n        }\r\n        /**\r\n         * XHR supports binary\r\n         */\r\n        const forceBase64 = opts && opts.forceBase64;\r\n        this.supportsBinary = hasXHR2 && !forceBase64;\r\n        if (this.opts.withCredentials) {\r\n            this.cookieJar = createCookieJar();\r\n        }\r\n    }\r\n    get name() {\r\n        return \"polling\";\r\n    }\r\n    /**\r\n     * Opens the socket (triggers polling). We write a PING message to determine\r\n     * when the transport is open.\r\n     *\r\n     * @protected\r\n     */\r\n    doOpen() {\r\n        this.poll();\r\n    }\r\n    /**\r\n     * Pauses polling.\r\n     *\r\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\r\n     * @package\r\n     */\r\n    pause(onPause) {\r\n        this.readyState = \"pausing\";\r\n        const pause = () => {\r\n            this.readyState = \"paused\";\r\n            onPause();\r\n        };\r\n        if (this.polling || !this.writable) {\r\n            let total = 0;\r\n            if (this.polling) {\r\n                total++;\r\n                this.once(\"pollComplete\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n            if (!this.writable) {\r\n                total++;\r\n                this.once(\"drain\", function () {\r\n                    --total || pause();\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            pause();\r\n        }\r\n    }\r\n    /**\r\n     * Starts polling cycle.\r\n     *\r\n     * @private\r\n     */\r\n    poll() {\r\n        this.polling = true;\r\n        this.doPoll();\r\n        this.emitReserved(\"poll\");\r\n    }\r\n    /**\r\n     * Overloads onData to detect payloads.\r\n     *\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const callback = (packet) => {\r\n            // if its the first message we consider the transport open\r\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\r\n                this.onOpen();\r\n            }\r\n            // if its a close packet, we close the ongoing requests\r\n            if (\"close\" === packet.type) {\r\n                this.onClose({ description: \"transport closed by the server\" });\r\n                return false;\r\n            }\r\n            // otherwise bypass onData and handle the message\r\n            this.onPacket(packet);\r\n        };\r\n        // decode payload\r\n        decodePayload(data, this.socket.binaryType).forEach(callback);\r\n        // if an event did not trigger closing\r\n        if (\"closed\" !== this.readyState) {\r\n            // if we got data we're not polling\r\n            this.polling = false;\r\n            this.emitReserved(\"pollComplete\");\r\n            if (\"open\" === this.readyState) {\r\n                this.poll();\r\n            }\r\n            else {\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * For polling, send a close packet.\r\n     *\r\n     * @protected\r\n     */\r\n    doClose() {\r\n        const close = () => {\r\n            this.write([{ type: \"close\" }]);\r\n        };\r\n        if (\"open\" === this.readyState) {\r\n            close();\r\n        }\r\n        else {\r\n            // in case we're trying to close while\r\n            // handshaking is in progress (GH-164)\r\n            this.once(\"open\", close);\r\n        }\r\n    }\r\n    /**\r\n     * Writes a packets payload.\r\n     *\r\n     * @param {Array} packets - data packets\r\n     * @protected\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        encodePayload(packets, (data) => {\r\n            this.doWrite(data, () => {\r\n                this.writable = true;\r\n                this.emitReserved(\"drain\");\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        // cache busting is forced\r\n        if (false !== this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = yeast();\r\n        }\r\n        if (!this.supportsBinary && !query.sid) {\r\n            query.b64 = 1;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Creates a request.\r\n     *\r\n     * @param {String} method\r\n     * @private\r\n     */\r\n    request(opts = {}) {\r\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\r\n        return new Request(this.uri(), opts);\r\n    }\r\n    /**\r\n     * Sends data.\r\n     *\r\n     * @param {String} data to send.\r\n     * @param {Function} called upon flush.\r\n     * @private\r\n     */\r\n    doWrite(data, fn) {\r\n        const req = this.request({\r\n            method: \"POST\",\r\n            data: data,\r\n        });\r\n        req.on(\"success\", fn);\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr post error\", xhrStatus, context);\r\n        });\r\n    }\r\n    /**\r\n     * Starts a poll cycle.\r\n     *\r\n     * @private\r\n     */\r\n    doPoll() {\r\n        const req = this.request();\r\n        req.on(\"data\", this.onData.bind(this));\r\n        req.on(\"error\", (xhrStatus, context) => {\r\n            this.onError(\"xhr poll error\", xhrStatus, context);\r\n        });\r\n        this.pollXhr = req;\r\n    }\r\n}\r\nexport class Request extends Emitter {\r\n    /**\r\n     * Request constructor\r\n     *\r\n     * @param {Object} options\r\n     * @package\r\n     */\r\n    constructor(uri, opts) {\r\n        super();\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.method = opts.method || \"GET\";\r\n        this.uri = uri;\r\n        this.data = undefined !== opts.data ? opts.data : null;\r\n        this.create();\r\n    }\r\n    /**\r\n     * Creates the XHR object and sends the request.\r\n     *\r\n     * @private\r\n     */\r\n    create() {\r\n        var _a;\r\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\r\n        opts.xdomain = !!this.opts.xd;\r\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\r\n        try {\r\n            xhr.open(this.method, this.uri, true);\r\n            try {\r\n                if (this.opts.extraHeaders) {\r\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n                    for (let i in this.opts.extraHeaders) {\r\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) { }\r\n            if (\"POST\" === this.method) {\r\n                try {\r\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n                catch (e) { }\r\n            }\r\n            try {\r\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n            }\r\n            catch (e) { }\r\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\r\n            // ie6 check\r\n            if (\"withCredentials\" in xhr) {\r\n                xhr.withCredentials = this.opts.withCredentials;\r\n            }\r\n            if (this.opts.requestTimeout) {\r\n                xhr.timeout = this.opts.requestTimeout;\r\n            }\r\n            if (this.opts.accessToken) {\r\n                xhr.setRequestHeader('Authorization', 'Bearer ' + this.opts.accessToken);\r\n            }\r\n            xhr.onreadystatechange = () => {\r\n                var _a;\r\n                if (xhr.readyState === 3) {\r\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\r\n                }\r\n                if (4 !== xhr.readyState)\r\n                    return;\r\n                if (200 === xhr.status || 1223 === xhr.status) {\r\n                    this.onLoad();\r\n                }\r\n                else {\r\n                    // make sure the `error` event handler that's user-set\r\n                    // does not throw in the same tick and gets caught here\r\n                    this.setTimeoutFn(() => {\r\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n                    }, 0);\r\n                }\r\n            };\r\n            xhr.send(this.data);\r\n        }\r\n        catch (e) {\r\n            // Need to defer since .create() is called directly from the constructor\r\n            // and thus the 'error' event can only be only bound *after* this exception\r\n            // occurs.  Therefore, also, we cannot throw here at all.\r\n            this.setTimeoutFn(() => {\r\n                this.onError(e);\r\n            }, 0);\r\n            return;\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            this.index = Request.requestsCount++;\r\n            Request.requests[this.index] = this;\r\n        }\r\n    }\r\n    /**\r\n     * Called upon error.\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        this.emitReserved(\"error\", err, this.xhr);\r\n        this.cleanup(true);\r\n    }\r\n    /**\r\n     * Cleans up house.\r\n     *\r\n     * @private\r\n     */\r\n    cleanup(fromError) {\r\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n            return;\r\n        }\r\n        this.xhr.onreadystatechange = empty;\r\n        if (fromError) {\r\n            try {\r\n                this.xhr.abort();\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (typeof document !== \"undefined\") {\r\n            delete Request.requests[this.index];\r\n        }\r\n        this.xhr = null;\r\n    }\r\n    /**\r\n     * Called upon load.\r\n     *\r\n     * @private\r\n     */\r\n    onLoad() {\r\n        const data = this.xhr.responseText;\r\n        if (data !== null) {\r\n            this.emitReserved(\"data\", data);\r\n            this.emitReserved(\"success\");\r\n            this.cleanup();\r\n        }\r\n    }\r\n    /**\r\n     * Aborts the request.\r\n     *\r\n     * @package\r\n     */\r\n    abort() {\r\n        this.cleanup();\r\n    }\r\n}\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\nif (typeof document !== \"undefined\") {\r\n    // @ts-ignore\r\n    if (typeof attachEvent === \"function\") {\r\n        // @ts-ignore\r\n        attachEvent(\"onunload\", unloadHandler);\r\n    }\r\n    else if (typeof addEventListener === \"function\") {\r\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n        addEventListener(terminationEvent, unloadHandler, false);\r\n    }\r\n}\r\nfunction unloadHandler() {\r\n    for (let i in Request.requests) {\r\n        if (Request.requests.hasOwnProperty(i)) {\r\n            Request.requests[i].abort();\r\n        }\r\n    }\r\n}\r\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\r\nexport const nextTick = (() => {\r\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\r\n    if (isPromiseAvailable) {\r\n        return (cb) => Promise.resolve().then(cb);\r\n    }\r\n    else {\r\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\r\n    }\r\n})();\r\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\r\nexport const usingBrowserWebSocket = true;\r\nexport const defaultBinaryType = \"arraybuffer\";\r\n","import { Transport } from \"../transport.js\";\r\nimport { yeast } from \"../contrib/yeast.js\";\r\nimport { pick } from \"../util.js\";\r\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\r\nimport { encodePacket } from \"engine.io-parser\";\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nexport class WS extends Transport {\r\n    /**\r\n     * WebSocket transport constructor.\r\n     *\r\n     * @param {Object} opts - connection options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    doOpen() {\r\n        if (!this.check()) {\r\n            // let probe timeout\r\n            return;\r\n        }\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws =\r\n                usingBrowserWebSocket && !isReactNative\r\n                    ? protocols\r\n                        ? new WebSocket(uri, protocols)\r\n                        : new WebSocket(uri)\r\n                    : new WebSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = (closeEvent) => this.onClose({\r\n            description: \"websocket connection closed\",\r\n            context: closeEvent,\r\n        });\r\n        this.ws.onmessage = (ev) => this.onData(ev.data);\r\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            encodePacket(packet, this.supportsBinary, (data) => {\r\n                // always create a new object (GH-437)\r\n                const opts = {};\r\n                if (!usingBrowserWebSocket) {\r\n                    if (packet.options) {\r\n                        opts.compress = packet.options.compress;\r\n                    }\r\n                    if (this.opts.perMessageDeflate) {\r\n                        const len = \r\n                        // @ts-ignore\r\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\r\n                        if (len < this.opts.perMessageDeflate.threshold) {\r\n                            opts.compress = false;\r\n                        }\r\n                    }\r\n                }\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    if (usingBrowserWebSocket) {\r\n                        // TypeError is thrown when passing the second argument on Safari\r\n                        this.ws.send(data);\r\n                    }\r\n                    else {\r\n                        this.ws.send(data, opts);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        const query = this.query || {};\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = yeast();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        // add auth if token is available\r\n        if (this.opts.accessToken) {\r\n            query[\"access_token\"] = this.opts.accessToken;\r\n        }\r\n        return this.createUri(schema, query);\r\n    }\r\n    /**\r\n     * Feature detection for WebSocket.\r\n     *\r\n     * @return {Boolean} whether this transport is available.\r\n     * @private\r\n     */\r\n    check() {\r\n        return !!WebSocket;\r\n    }\r\n}\r\n","import { Polling } from \"./polling.js\";\r\nimport { WS } from \"./websocket.js\";\r\nimport { WT } from \"./webtransport.js\";\r\nexport const transports = {\r\n    websocket: WS,\r\n    webtransport: WT,\r\n    polling: Polling,\r\n};\r\n","import { Transport } from \"../transport.js\";\r\nimport { nextTick } from \"./websocket-constructor.js\";\r\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\r\nexport class WT extends Transport {\r\n    get name() {\r\n        return \"webtransport\";\r\n    }\r\n    doOpen() {\r\n        // @ts-ignore\r\n        if (typeof WebTransport !== \"function\") {\r\n            return;\r\n        }\r\n        // @ts-ignore\r\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\r\n        this.transport.closed\r\n            .then(() => {\r\n            this.onClose();\r\n        })\r\n            .catch((err) => {\r\n            this.onError(\"webtransport error\", err);\r\n        });\r\n        // note: we could have used async/await, but that would require some additional polyfills\r\n        this.transport.ready.then(() => {\r\n            this.transport.createBidirectionalStream().then((stream) => {\r\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\r\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\r\n                const encoderStream = createPacketEncoderStream();\r\n                encoderStream.readable.pipeTo(stream.writable);\r\n                this.writer = encoderStream.writable.getWriter();\r\n                const read = () => {\r\n                    reader\r\n                        .read()\r\n                        .then(({ done, value }) => {\r\n                        if (done) {\r\n                            return;\r\n                        }\r\n                        this.onPacket(value);\r\n                        read();\r\n                    })\r\n                        .catch((err) => {\r\n                    });\r\n                };\r\n                read();\r\n                const packet = { type: \"open\" };\r\n                if (this.query.sid) {\r\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\r\n                }\r\n                this.writer.write(packet).then(() => this.onOpen());\r\n            });\r\n        });\r\n    }\r\n    write(packets) {\r\n        this.writable = false;\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            this.writer.write(packet).then(() => {\r\n                if (lastPacket) {\r\n                    nextTick(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    doClose() {\r\n        var _a;\r\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\r\n    }\r\n}\r\n","// imported from https://github.com/galkn/parseuri\r\n/**\r\n * Parses a URI\r\n *\r\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\r\n *\r\n * See:\r\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n * - https://caniuse.com/url\r\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\r\n *\r\n * History of the parse() method:\r\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\r\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\r\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\nconst parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\nexport function parse(str) {\r\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n    let m = re.exec(str || ''), uri = {}, i = 14;\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n    uri.pathNames = pathNames(uri, uri['path']);\r\n    uri.queryKey = queryKey(uri, uri['query']);\r\n    return uri;\r\n}\r\nfunction pathNames(obj, path) {\r\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\r\n    if (path.slice(0, 1) == '/' || path.length === 0) {\r\n        names.splice(0, 1);\r\n    }\r\n    if (path.slice(-1) == '/') {\r\n        names.splice(names.length - 1, 1);\r\n    }\r\n    return names;\r\n}\r\nfunction queryKey(uri, query) {\r\n    const data = {};\r\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\r\n        if ($1) {\r\n            data[$1] = $2;\r\n        }\r\n    });\r\n    return data;\r\n}\r\n","import { createUri } from \"./createuri.js\";\r\nclass NegotiateError extends Error {\r\n    constructor(reason, context) {\r\n        super(reason);\r\n        this.context = context;\r\n        this.type = \"NegotiateError\";\r\n    }\r\n}\r\nexport class Negotiate {\r\n    /**\r\n     * Negotiate constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n    }\r\n    /**\r\n     * Start the negotiation\r\n     */\r\n    async start() {\r\n        const uri = this.uri();\r\n        let negotiateResult = await fetch(uri);\r\n        if (negotiateResult.status < 200 || negotiateResult.status >= 400) {\r\n            throw new NegotiateError(\"Unexpected status code \" + negotiateResult.status, negotiateResult);\r\n        }\r\n        return await negotiateResult.json();\r\n    }\r\n    /**\r\n     * Generates uri for negotiate.\r\n     *\r\n     * @private\r\n     */\r\n    uri() {\r\n        const schema = this.opts.secure ? \"https\" : \"http\";\r\n        const query = this.query || {};\r\n        let opts = Object.assign({}, this.opts, {\r\n            path: this.opts.negotiatePath,\r\n        });\r\n        return createUri(opts, schema, query);\r\n    }\r\n}\r\n","import { transports } from \"./transports/index.js\";\r\nimport { installTimerFunctions, byteLength } from \"./util.js\";\r\nimport { decode } from \"./contrib/parseqs.js\";\r\nimport { parse } from \"./contrib/parseuri.js\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { protocol } from \"engine.io-parser\";\r\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\r\nimport { Negotiate } from \"./negotiate.js\";\r\nexport class Socket extends Emitter {\r\n    /**\r\n     * Socket constructor.\r\n     *\r\n     * @param {String|Object} uri - uri or options\r\n     * @param {Object} opts - options\r\n     */\r\n    constructor(uri, opts = {}) {\r\n        super();\r\n        this.binaryType = defaultBinaryType;\r\n        this.writeBuffer = [];\r\n        if (uri && \"object\" === typeof uri) {\r\n            opts = uri;\r\n            uri = null;\r\n        }\r\n        if (uri) {\r\n            uri = parse(uri);\r\n            opts.hostname = uri.host;\r\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\r\n            opts.port = uri.port;\r\n            if (uri.query)\r\n                opts.query = uri.query;\r\n        }\r\n        else if (opts.host) {\r\n            opts.hostname = parse(opts.host).host;\r\n        }\r\n        installTimerFunctions(this, opts);\r\n        this.secure =\r\n            null != opts.secure\r\n                ? opts.secure\r\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\r\n        if (opts.hostname && !opts.port) {\r\n            // if no port is specified manually, use the protocol default\r\n            opts.port = this.secure ? \"443\" : \"80\";\r\n        }\r\n        this.hostname =\r\n            opts.hostname ||\r\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\r\n        this.port =\r\n            opts.port ||\r\n                (typeof location !== \"undefined\" && location.port\r\n                    ? location.port\r\n                    : this.secure\r\n                        ? \"443\"\r\n                        : \"80\");\r\n        this.transports = opts.transports || [\r\n            \"polling\",\r\n            \"websocket\",\r\n            \"webtransport\",\r\n        ];\r\n        this.writeBuffer = [];\r\n        this.prevBufferLen = 0;\r\n        this.opts = Object.assign({\r\n            path: \"/engine.io\",\r\n            agent: false,\r\n            withCredentials: false,\r\n            upgrade: true,\r\n            timestampParam: \"t\",\r\n            rememberUpgrade: false,\r\n            addTrailingSlash: true,\r\n            rejectUnauthorized: true,\r\n            perMessageDeflate: {\r\n                threshold: 1024,\r\n            },\r\n            transportOptions: {},\r\n            closeOnBeforeunload: false,\r\n        }, opts);\r\n        this.opts.path =\r\n            this.opts.path.replace(/\\/$/, \"\") +\r\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\r\n        this.path = this.opts.path;\r\n        if (typeof this.opts.query === \"string\") {\r\n            this.opts.query = decode(this.opts.query);\r\n        }\r\n        // set on handshake\r\n        this.id = null;\r\n        this.upgrades = null;\r\n        this.pingInterval = null;\r\n        this.pingTimeout = null;\r\n        // set on heartbeat\r\n        this.pingTimeoutTimer = null;\r\n        if (typeof addEventListener === \"function\") {\r\n            if (this.opts.closeOnBeforeunload) {\r\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\r\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\r\n                // closed/reloaded)\r\n                this.beforeunloadEventListener = () => {\r\n                    if (this.transport) {\r\n                        // silently close the transport\r\n                        this.transport.removeAllListeners();\r\n                        this.transport.close();\r\n                    }\r\n                };\r\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n            }\r\n            if (this.hostname !== \"localhost\") {\r\n                this.offlineEventListener = () => {\r\n                    this.onClose(\"transport close\", {\r\n                        description: \"network connection lost\",\r\n                    });\r\n                };\r\n                addEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n        }\r\n        this.negotiateAndOpen();\r\n    }\r\n    /**\r\n     * Creates transport of the given type.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @return {Transport}\r\n     * @private\r\n     */\r\n    createTransport(name) {\r\n        const query = Object.assign({}, this.opts.query);\r\n        // append engine.io protocol identifier\r\n        query.EIO = protocol;\r\n        // transport name\r\n        query.transport = name;\r\n        // session id if we already have one\r\n        if (this.id)\r\n            query.sid = this.id;\r\n        const opts = Object.assign({}, this.opts, {\r\n            query,\r\n            socket: this,\r\n            hostname: this.hostname,\r\n            secure: this.secure,\r\n            port: this.port,\r\n            path: this.path,\r\n            token: this.token,\r\n        }, this.opts.transportOptions[name]);\r\n        return new transports[name](opts);\r\n    }\r\n    /**\r\n     * Negotiate and decide the url and then open transport.\r\n     */\r\n    async negotiateAndOpen() {\r\n        if (this.opts.negotiatePath) {\r\n            const negotiate = new Negotiate(this.opts);\r\n            const negotiateResult = await negotiate.start();\r\n            // if url is set, we parse it and replace the original properties for transport\r\n            // if not, there's not redirection.\r\n            if (negotiateResult.url) {\r\n                const url = parse(negotiateResult.url);\r\n                this.hostname = url.host;\r\n                this.secure = url.protocol === \"https\" || url.protocol === \"wss\";\r\n                this.port = url.port;\r\n                this.path = url.path;\r\n            }\r\n            this.token = negotiateResult.token;\r\n        }\r\n        this.open();\r\n    }\r\n    /**\r\n     * Initializes transport to use and starts probe.\r\n     *\r\n     * @private\r\n     */\r\n    open() {\r\n        let transport;\r\n        if (this.opts.rememberUpgrade &&\r\n            Socket.priorWebsocketSuccess &&\r\n            this.transports.indexOf(\"websocket\") !== -1) {\r\n            transport = \"websocket\";\r\n        }\r\n        else if (0 === this.transports.length) {\r\n            // Emit error on next tick so it can be listened to\r\n            this.setTimeoutFn(() => {\r\n                this.emitReserved(\"error\", \"No transports available\");\r\n            }, 0);\r\n            return;\r\n        }\r\n        else {\r\n            transport = this.transports[0];\r\n        }\r\n        this.readyState = \"opening\";\r\n        // Retry with the next transport if the transport is disabled (jsonp: false)\r\n        try {\r\n            transport = this.createTransport(transport);\r\n        }\r\n        catch (e) {\r\n            this.transports.shift();\r\n            this.open();\r\n            return;\r\n        }\r\n        transport.open();\r\n        this.setTransport(transport);\r\n    }\r\n    /**\r\n     * Sets the current transport. Disables the existing one (if any).\r\n     *\r\n     * @private\r\n     */\r\n    setTransport(transport) {\r\n        if (this.transport) {\r\n            this.transport.removeAllListeners();\r\n        }\r\n        // set up transport\r\n        this.transport = transport;\r\n        // set up transport listeners\r\n        transport\r\n            .on(\"drain\", this.onDrain.bind(this))\r\n            .on(\"packet\", this.onPacket.bind(this))\r\n            .on(\"error\", this.onError.bind(this))\r\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\r\n    }\r\n    /**\r\n     * Probes a transport.\r\n     *\r\n     * @param {String} name - transport name\r\n     * @private\r\n     */\r\n    probe(name) {\r\n        let transport = this.createTransport(name);\r\n        let failed = false;\r\n        Socket.priorWebsocketSuccess = false;\r\n        const onTransportOpen = () => {\r\n            if (failed)\r\n                return;\r\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\r\n            transport.once(\"packet\", (msg) => {\r\n                if (failed)\r\n                    return;\r\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\r\n                    this.upgrading = true;\r\n                    this.emitReserved(\"upgrading\", transport);\r\n                    if (!transport)\r\n                        return;\r\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\r\n                    this.transport.pause(() => {\r\n                        if (failed)\r\n                            return;\r\n                        if (\"closed\" === this.readyState)\r\n                            return;\r\n                        cleanup();\r\n                        this.setTransport(transport);\r\n                        transport.send([{ type: \"upgrade\" }]);\r\n                        this.emitReserved(\"upgrade\", transport);\r\n                        transport = null;\r\n                        this.upgrading = false;\r\n                        this.flush();\r\n                    });\r\n                }\r\n                else {\r\n                    const err = new Error(\"probe error\");\r\n                    // @ts-ignore\r\n                    err.transport = transport.name;\r\n                    this.emitReserved(\"upgradeError\", err);\r\n                }\r\n            });\r\n        };\r\n        function freezeTransport() {\r\n            if (failed)\r\n                return;\r\n            // Any callback called by transport should be ignored since now\r\n            failed = true;\r\n            cleanup();\r\n            transport.close();\r\n            transport = null;\r\n        }\r\n        // Handle any error that happens while probing\r\n        const onerror = (err) => {\r\n            const error = new Error(\"probe error: \" + err);\r\n            // @ts-ignore\r\n            error.transport = transport.name;\r\n            freezeTransport();\r\n            this.emitReserved(\"upgradeError\", error);\r\n        };\r\n        function onTransportClose() {\r\n            onerror(\"transport closed\");\r\n        }\r\n        // When the socket is closed while we're probing\r\n        function onclose() {\r\n            onerror(\"socket closed\");\r\n        }\r\n        // When the socket is upgraded while we're probing\r\n        function onupgrade(to) {\r\n            if (transport && to.name !== transport.name) {\r\n                freezeTransport();\r\n            }\r\n        }\r\n        // Remove all listeners on the transport and on self\r\n        const cleanup = () => {\r\n            transport.removeListener(\"open\", onTransportOpen);\r\n            transport.removeListener(\"error\", onerror);\r\n            transport.removeListener(\"close\", onTransportClose);\r\n            this.off(\"close\", onclose);\r\n            this.off(\"upgrading\", onupgrade);\r\n        };\r\n        transport.once(\"open\", onTransportOpen);\r\n        transport.once(\"error\", onerror);\r\n        transport.once(\"close\", onTransportClose);\r\n        this.once(\"close\", onclose);\r\n        this.once(\"upgrading\", onupgrade);\r\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\r\n            name !== \"webtransport\") {\r\n            // favor WebTransport\r\n            this.setTimeoutFn(() => {\r\n                if (!failed) {\r\n                    transport.open();\r\n                }\r\n            }, 200);\r\n        }\r\n        else {\r\n            transport.open();\r\n        }\r\n    }\r\n    /**\r\n     * Called when connection is deemed open.\r\n     *\r\n     * @private\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\r\n        this.emitReserved(\"open\");\r\n        this.flush();\r\n        // we check for `readyState` in case an `open`\r\n        // listener already closed the socket\r\n        if (\"open\" === this.readyState && this.opts.upgrade) {\r\n            let i = 0;\r\n            const l = this.upgrades.length;\r\n            for (; i < l; i++) {\r\n                this.probe(this.upgrades[i]);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Handles a packet.\r\n     *\r\n     * @private\r\n     */\r\n    onPacket(packet) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            this.emitReserved(\"packet\", packet);\r\n            // Socket is live - any packet counts\r\n            this.emitReserved(\"heartbeat\");\r\n            this.resetPingTimeout();\r\n            switch (packet.type) {\r\n                case \"open\":\r\n                    this.onHandshake(JSON.parse(packet.data));\r\n                    break;\r\n                case \"ping\":\r\n                    this.sendPacket(\"pong\");\r\n                    this.emitReserved(\"ping\");\r\n                    this.emitReserved(\"pong\");\r\n                    break;\r\n                case \"error\":\r\n                    const err = new Error(\"server error\");\r\n                    // @ts-ignore\r\n                    err.code = packet.data;\r\n                    this.onError(err);\r\n                    break;\r\n                case \"message\":\r\n                    this.emitReserved(\"data\", packet.data);\r\n                    this.emitReserved(\"message\", packet.data);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n        }\r\n    }\r\n    /**\r\n     * Called upon handshake completion.\r\n     *\r\n     * @param {Object} data - handshake obj\r\n     * @private\r\n     */\r\n    onHandshake(data) {\r\n        this.emitReserved(\"handshake\", data);\r\n        this.id = data.sid;\r\n        this.transport.query.sid = data.sid;\r\n        this.upgrades = this.filterUpgrades(data.upgrades);\r\n        this.pingInterval = data.pingInterval;\r\n        this.pingTimeout = data.pingTimeout;\r\n        this.maxPayload = data.maxPayload;\r\n        this.onOpen();\r\n        // In case open handler closes socket\r\n        if (\"closed\" === this.readyState)\r\n            return;\r\n        this.resetPingTimeout();\r\n    }\r\n    /**\r\n     * Sets and resets ping timeout timer based on server pings.\r\n     *\r\n     * @private\r\n     */\r\n    resetPingTimeout() {\r\n        this.clearTimeoutFn(this.pingTimeoutTimer);\r\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\r\n            this.onClose(\"ping timeout\");\r\n        }, this.pingInterval + this.pingTimeout);\r\n        if (this.opts.autoUnref) {\r\n            this.pingTimeoutTimer.unref();\r\n        }\r\n    }\r\n    /**\r\n     * Called on `drain` event\r\n     *\r\n     * @private\r\n     */\r\n    onDrain() {\r\n        this.writeBuffer.splice(0, this.prevBufferLen);\r\n        // setting prevBufferLen = 0 is very important\r\n        // for example, when upgrading, upgrade packet is sent over,\r\n        // and a nonzero prevBufferLen could cause problems on `drain`\r\n        this.prevBufferLen = 0;\r\n        if (0 === this.writeBuffer.length) {\r\n            this.emitReserved(\"drain\");\r\n        }\r\n        else {\r\n            this.flush();\r\n        }\r\n    }\r\n    /**\r\n     * Flush write buffers.\r\n     *\r\n     * @private\r\n     */\r\n    flush() {\r\n        if (\"closed\" !== this.readyState &&\r\n            this.transport.writable &&\r\n            !this.upgrading &&\r\n            this.writeBuffer.length) {\r\n            const packets = this.getWritablePackets();\r\n            this.transport.send(packets);\r\n            // keep track of current length of writeBuffer\r\n            // splice writeBuffer and callbackBuffer on `drain`\r\n            this.prevBufferLen = packets.length;\r\n            this.emitReserved(\"flush\");\r\n        }\r\n    }\r\n    /**\r\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\r\n     * long-polling)\r\n     *\r\n     * @private\r\n     */\r\n    getWritablePackets() {\r\n        const shouldCheckPayloadSize = this.maxPayload &&\r\n            this.transport.name === \"polling\" &&\r\n            this.writeBuffer.length > 1;\r\n        if (!shouldCheckPayloadSize) {\r\n            return this.writeBuffer;\r\n        }\r\n        let payloadSize = 1; // first packet type\r\n        for (let i = 0; i < this.writeBuffer.length; i++) {\r\n            const data = this.writeBuffer[i].data;\r\n            if (data) {\r\n                payloadSize += byteLength(data);\r\n            }\r\n            if (i > 0 && payloadSize > this.maxPayload) {\r\n                return this.writeBuffer.slice(0, i);\r\n            }\r\n            payloadSize += 2; // separator + packet type\r\n        }\r\n        return this.writeBuffer;\r\n    }\r\n    /**\r\n     * Sends a message.\r\n     *\r\n     * @param {String} msg - message.\r\n     * @param {Object} options.\r\n     * @param {Function} callback function.\r\n     * @return {Socket} for chaining.\r\n     */\r\n    write(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    send(msg, options, fn) {\r\n        this.sendPacket(\"message\", msg, options, fn);\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends a packet.\r\n     *\r\n     * @param {String} type: packet type.\r\n     * @param {String} data.\r\n     * @param {Object} options.\r\n     * @param {Function} fn - callback function.\r\n     * @private\r\n     */\r\n    sendPacket(type, data, options, fn) {\r\n        if (\"function\" === typeof data) {\r\n            fn = data;\r\n            data = undefined;\r\n        }\r\n        if (\"function\" === typeof options) {\r\n            fn = options;\r\n            options = null;\r\n        }\r\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\r\n            return;\r\n        }\r\n        options = options || {};\r\n        options.compress = false !== options.compress;\r\n        const packet = {\r\n            type: type,\r\n            data: data,\r\n            options: options,\r\n        };\r\n        this.emitReserved(\"packetCreate\", packet);\r\n        this.writeBuffer.push(packet);\r\n        if (fn)\r\n            this.once(\"flush\", fn);\r\n        this.flush();\r\n    }\r\n    /**\r\n     * Closes the connection.\r\n     */\r\n    close() {\r\n        const close = () => {\r\n            this.onClose(\"forced close\");\r\n            this.transport.close();\r\n        };\r\n        const cleanupAndClose = () => {\r\n            this.off(\"upgrade\", cleanupAndClose);\r\n            this.off(\"upgradeError\", cleanupAndClose);\r\n            close();\r\n        };\r\n        const waitForUpgrade = () => {\r\n            // wait for upgrade to finish since we can't send packets while pausing a transport\r\n            this.once(\"upgrade\", cleanupAndClose);\r\n            this.once(\"upgradeError\", cleanupAndClose);\r\n        };\r\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n            this.readyState = \"closing\";\r\n            if (this.writeBuffer.length) {\r\n                this.once(\"drain\", () => {\r\n                    if (this.upgrading) {\r\n                        waitForUpgrade();\r\n                    }\r\n                    else {\r\n                        close();\r\n                    }\r\n                });\r\n            }\r\n            else if (this.upgrading) {\r\n                waitForUpgrade();\r\n            }\r\n            else {\r\n                close();\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Called upon transport error\r\n     *\r\n     * @private\r\n     */\r\n    onError(err) {\r\n        Socket.priorWebsocketSuccess = false;\r\n        this.emitReserved(\"error\", err);\r\n        this.onClose(\"transport error\", err);\r\n    }\r\n    /**\r\n     * Called upon transport close.\r\n     *\r\n     * @private\r\n     */\r\n    onClose(reason, description) {\r\n        if (\"opening\" === this.readyState ||\r\n            \"open\" === this.readyState ||\r\n            \"closing\" === this.readyState) {\r\n            // clear timers\r\n            this.clearTimeoutFn(this.pingTimeoutTimer);\r\n            // stop event from firing again for transport\r\n            this.transport.removeAllListeners(\"close\");\r\n            // ensure transport won't stay open\r\n            this.transport.close();\r\n            // ignore further transport communication\r\n            this.transport.removeAllListeners();\r\n            if (typeof removeEventListener === \"function\") {\r\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\r\n                removeEventListener(\"offline\", this.offlineEventListener, false);\r\n            }\r\n            // set ready state\r\n            this.readyState = \"closed\";\r\n            // clear session id\r\n            this.id = null;\r\n            // emit close event\r\n            this.emitReserved(\"close\", reason, description);\r\n            // clean buffers after, so users can still\r\n            // grab the buffers on `close` event\r\n            this.writeBuffer = [];\r\n            this.prevBufferLen = 0;\r\n        }\r\n    }\r\n    /**\r\n     * Filters upgrades, returning only those matching client transports.\r\n     *\r\n     * @param {Array} upgrades - server upgrades\r\n     * @private\r\n     */\r\n    filterUpgrades(upgrades) {\r\n        const filteredUpgrades = [];\r\n        let i = 0;\r\n        const j = upgrades.length;\r\n        for (; i < j; i++) {\r\n            if (~this.transports.indexOf(upgrades[i]))\r\n                filteredUpgrades.push(upgrades[i]);\r\n        }\r\n        return filteredUpgrades;\r\n    }\r\n}\r\nSocket.protocol = protocol;\r\n","import { Socket } from \"./socket.js\";\r\nexport { Socket };\r\nexport const protocol = Socket.protocol;\r\nexport { Transport } from \"./transport.js\";\r\nexport { transports } from \"./transports/index.js\";\r\nexport { installTimerFunctions } from \"./util.js\";\r\nexport { parse } from \"./contrib/parseuri.js\";\r\nexport { nextTick } from \"./transports/websocket-constructor.js\";\r\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","createUri","schema","query","hostname","indexOf","_hostname","port","secure","Number","_port","path","encodedQuery","str","encodeURIComponent","_query","TransportError","Error","constructor","reason","description","context","super","Transport","writable","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","accessToken","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","NegotiateError","Negotiate","async","negotiateResult","fetch","json","negotiatePath","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","negotiateAndOpen","createTransport","EIO","token","negotiate","start","url","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades"],"mappings":"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"}